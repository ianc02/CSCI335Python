from pyhop_anytime import *
global state, goals
state = State('state')
state.calibration_target = Oset([('instrument0','groundstation0'),('instrument1','star3'),('instrument10','groundstation4'),('instrument11','star2'),('instrument12','star3'),('instrument13','star2'),('instrument14','groundstation4'),('instrument15','star1'),('instrument16','star2'),('instrument17','groundstation0'),('instrument18','star2'),('instrument19','star3'),('instrument2','star1'),('instrument20','star2'),('instrument21','groundstation4'),('instrument22','star2'),('instrument23','star3'),('instrument24','groundstation0'),('instrument3','star1'),('instrument4','star3'),('instrument5','groundstation4'),('instrument6','star3'),('instrument7','star2'),('instrument8','star1'),('instrument9','star3')])
state.on_board = Oset([('instrument0','satellite0'),('instrument1','satellite0'),('instrument10','satellite2'),('instrument11','satellite2'),('instrument12','satellite2'),('instrument13','satellite2'),('instrument14','satellite3'),('instrument15','satellite3'),('instrument16','satellite3'),('instrument17','satellite3'),('instrument18','satellite3'),('instrument19','satellite3'),('instrument2','satellite0'),('instrument20','satellite3'),('instrument21','satellite3'),('instrument22','satellite4'),('instrument23','satellite4'),('instrument24','satellite4'),('instrument3','satellite1'),('instrument4','satellite1'),('instrument5','satellite1'),('instrument6','satellite1'),('instrument7','satellite1'),('instrument8','satellite2'),('instrument9','satellite2')])
state.pointing = Oset([('satellite0','planet21'),('satellite1','planet21'),('satellite2','phenomenon5'),('satellite3','phenomenon20'),('satellite4','star14')])
state.power_avail = Oset(['satellite0','satellite1','satellite2','satellite3','satellite4'])
state.supports = Oset([('instrument0','image4'),('instrument0','infrared2'),('instrument1','spectrograph0'),('instrument10','image4'),('instrument10','image5'),('instrument10','infrared7'),('instrument11','infrared2'),('instrument12','thermograph1'),('instrument13','infrared3'),('instrument14','infrared2'),('instrument14','thermograph1'),('instrument15','infrared2'),('instrument16','image4'),('instrument16','spectrograph6'),('instrument17','image4'),('instrument17','image5'),('instrument17','infrared7'),('instrument18','image4'),('instrument18','spectrograph6'),('instrument19','infrared3'),('instrument19','infrared7'),('instrument19','spectrograph6'),('instrument2','infrared3'),('instrument2','spectrograph0'),('instrument2','thermograph1'),('instrument20','infrared2'),('instrument20','infrared3'),('instrument21','infrared2'),('instrument21','thermograph1'),('instrument22','image5'),('instrument22','thermograph1'),('instrument23','infrared7'),('instrument23','thermograph1'),('instrument24','infrared3'),('instrument24','spectrograph0'),('instrument3','image5'),('instrument3','thermograph1'),('instrument4','spectrograph0'),('instrument5','spectrograph0'),('instrument5','spectrograph6'),('instrument5','thermograph1'),('instrument6','image5'),('instrument6','infrared7'),('instrument7','spectrograph0'),('instrument7','spectrograph6'),('instrument7','thermograph1'),('instrument8','infrared3'),('instrument8','infrared7'),('instrument9','spectrograph0')])
state.calibrated = Oset()
state.have_image = Oset()
state.power_on = Oset()

goals = State('goals')
goals.have_image = Oset([('phenomenon11','infrared2'),('phenomenon13','infrared2'),('phenomenon13','infrared7'),('phenomenon20','spectrograph0'),('phenomenon24','image5'),('phenomenon24','spectrograph6'),('phenomenon5','image4'),('phenomenon5','infrared7'),('phenomenon7','thermograph1'),('planet15','infrared2'),('planet17','image4'),('planet17','image5'),('planet21','image5'),('planet21','infrared3'),('planet22','infrared2'),('planet9','spectrograph0'),('planet9','spectrograph6'),('star10','infrared3'),('star10','spectrograph6'),('star12','spectrograph6'),('star12','thermograph1'),('star14','infrared2'),('star16','image4'),('star18','infrared2'),('star19','infrared3'),('star19','thermograph1'),('star23','infrared2')])
goals.pointing = Oset([('satellite0','planet17')])

